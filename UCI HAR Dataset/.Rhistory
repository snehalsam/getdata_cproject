dir
source('C:/snehal/Coursera/Data Science/R Programing/prg asg 1 week 2/test2.R')
test2
install.packages("KernSmooth")
library(KernSmooth)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector (c(1:4))
boom <- c(1:4)
makeVector (boom)
mv <- makeVector(boom)
ls
ls()
mv
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(boom)
source('C:/snehal/Coursera/Data Science/R Programing/prg asg 2 week 3/ProgrammingAssignment2/cachematrix.R')
test <- matrix (1:3,1:3)
test
test <- matrix (c(1:3,1:3), nrow=3, ncol=3 )
tets
test
makeCacheMatrix (test)
mk <- makeCacheMatrix (test)
mk
cs <- cacheSolve(test)
cs
source('C:/snehal/Coursera/Data Science/R Programing/prg asg 2 week 3/ProgrammingAssignment2/cachematrix.R')
cs <- cacheSolve(test)
checkMatrix
checkmatrix
source('C:/snehal/Coursera/Data Science/R Programing/prg asg 2 week 3/ProgrammingAssignment2/cachematrix.R')
install.packages("lattice")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(weight ~ Time | Diet)
xyplot(weight ~ Time | BodyWeight)
colnames(nlme)
colname(nlme)
str(nlme)
str("nlme")
summary (nlme)
data(nlme)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
install.packages("ggplot2")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
setwd("C:/snehal/Coursera/Data Science/getting and cleaning data/week 3 quiz")
dir()
acr10 <- read.csv("getdata-data-ss06hid.csv")
head(acr10, 3)
subacr <- acr10[,(ACR==3 & AGS==6)]
subacr <- acr10[,(acr10$ACR==3 & acr10$AGS==6)]
subacr <- acr10[,('ACR'==3 & acr10$AGS==6)]
subacr <- acr10[,('ACR'==3 & 'AGS'==6)]
length(subacr)
str(subacr)
head(subacr, 3)
subacr
subacr <- acr10[('ACR'==3 & 'AGS'==6),]
head(subacr, 3)
str(subacr)
subacr <- acr10[(ACR==3 & AGS==6),]
subacr <- acr10[(acr10$ACR==3 & AGS==6),]
subacr <- acr10[(acr10$ACR==3 & acr10$AGS==6),]
str(subacr)
head(subacr, 3)
which(subacr)
subacr <- acr10[acr10$ACR]==3 & acr10[acr10$AGS]==6
subacr <- acr10['ACR']==3 & acr10[acr10$AGS]==6
subacr <- acr10['ACR']==3 & acr10['AGS']==6
head(subacr, 3)
which(subacr)
install.packages("jpeg")
library(jpeg)
?jpeg
dir()
jeff <- readJPEG("getdata-jeff.jpg", native=TRUE)
quantile(jeff, probs=c(0.3,0.8))
dir()
gdp<-read.csv("getdata-data-GDP.csv")
edu<-read.csv("getdata-data-EDSTATS_Country.csv"
)
head(gdp)
head(gdp, 3)
head(gdp, 3)
head(gdp, 5)
head(gdp, 10)
colnames(gdp)
colnames(gdp)<-c("code","rank","x.1","country","eco_size")
head(gdp, 10)
colnames(gdp)<-c("code","rank","x3","country","eco_size","x6","x7","x8","x9","x10")
head(gdp, 10)
head(edu, 10)
edu['CountryCode'] %in% gdp['code']
edu[,'CountryCode'] %in% gdp[,'code']
sum(edu[,'CountryCode'] %in% gdp[,'code'])
edu['CountryCode'] == gdp['code']
edu['CountryCode'] %in% gdp['code']
sum(edu[,'CountryCode'] %in% gdp[,'code'])
edu['CountryCode'] == gdp['code']
sum(edu[,'CountryCode'] == gdp[,'code'])
sum(edu[,'CountryCode'] %in% gdp[,'code'])
gdpedu <- merge(gdp, edu, by.x="code", by.y="CountryCOde")
gdpedu <- merge(gdp, edu, by.x="gdp$code", by.y="edu$CountryCOde")
gdpedu <- merge(gdp, edu, by.x="code", by.y="CountryCode")
summary(gdpedu)
str(gdpedu)
order(gdpedu, rank)
ord <- gdpedu[order(-rank),]
ord <- order(gdpedu['rank'])
ord <- order(gdpedu['rank'], decreasing=TRUE
)
ord[13,]
head[ord,3]
ord
ord == 13
which(ord==13)
gdpedu[35,'country']
gdpedu[35,'long name']
gdpedu[35,'Long.Name']
str(gdpedu)
levels(gdpedu['Income.Group'])
level(gdpedu['Income.Group'])
level(gdpedu$Income.Group)
levels(gdpedu$Income.Group)
nonocd <- gdpedu[(gdpedu$Income.Group=="High income: nonOECD"),]
mean(nonocd$rank)
head(gdpedu, 3)
class(gdpedu$rank)
head(nonocd, 3)
nonocdrank <- as.numeric(nonocd$rank)
mean(as.numeric(nonocd$rank))
ave(gdpedu$rank, "High income: nonOECD")
ave(gdpedu$rank, High income: nonOECD)
ave(gdpedu$rank)
ave(gdpedu, rank)
nonocd <- gdpedu[(gdpedu$Income.Group=="High income: nonOECD"),rank]
nonocd <- gdpedu[(gdpedu$Income.Group=="High income: nonOECD"),'rank']
nonocd
nonocd <- as.numeric(nonocd)
mean(nonocd)
nonocd <- gdpedu[(gdpedu$Income.Group=="High income: OECD"),'rank']
nonocd <- as.numeric(nonocd)
mean(nonocd)
tail(gdpedu, 3)
sort(gdpedu$rank, decreasing=TRUE
)
gdpedu[order(gdpedu$rank, decreasing=TRUE),]
gdpedu <- gdpedu[order(gdpedu$rank, decreasing=TRUE),]
tail(gdpedu)
View(gdpedu)
gdpedu[order(as.numeric(gdpedu$rank), decreasing=TRUE),]
gdpedu <- gdpedu[order(as.numeric(gdpedu$rank), decreasing=TRUE),]
View(gdpedu)
class(gdpedu$rank)
is.numeric(gdpedu$rank)
gdpedu$rank <- as.numeric(gdpedu$rank)
class(gdpedu$rank)
gdpedu <- gdpedu[order(gdpedu$rank, decreasing=TRUE),]
View(gdpedu)
setwd("C:/snehal/Coursera/Data Science/getting and cleaning data/course project")
dir()
cd uci
cd
?cd
setwd("C:/snehal/Coursera/Data Science/getting and cleaning data/course project/UCI HAR Dataset/train")
setwd("C:/snehal/Coursera/Data Science/getting and cleaning data/course project/UCI HAR Dataset/test")
testd <- read.table()
dir()
testd <- read.table("X_test.txt")
View(testd)
str(testd)
dir()
subject_test <- read.table("subject_test.txt")
class(subject_test)
colnames(subject_test) <- c("subjectid")
class(subject_test$subjectid)
testd <- cbind(subject_test, testd)
dir()
activity_test <- read.table("y_test.txt")
colnames(activity_test) <- c("activityid")
testd <- cbind(activity_test, testd)
traind <- read.table("X_train.txt")
subject_train <- read.table("subject_train.txt")
colnames(subject_train) <- c("subjectid")
traind <- cbind(subject_train, traind)
activity_train <- read.table("y_train.txt")
colnames(activity_train) <- c("activityid")
traind <- cbind(activity_train, traind)
setwd("C:/snehal/Coursera/Data Science/getting and cleaning data/course project/UCI HAR Dataset/train")
traind <- read.table("X_train.txt")
subject_train <- read.table("subject_train.txt")
colnames(subject_train) <- c("subjectid")
traind <- cbind(subject_train, traind)
activity_train <- read.table("y_train.txt")
colnames(activity_train) <- c("activityid")
traind <- cbind(activity_train, traind)
mergedset <- rbind(traind, testd)
View(mergedset)
setwd("C:/snehal/Coursera/Data Science/getting and cleaning data/course project/UCI HAR Dataset")
dir()
features <- read.table("features.txt")
View(features)
class(features)
findm <- c("mean", "std")
ftmean <- which(findm %in% features$V2)
ftmean
ftmean <- findm %in% features$V2
ftmean
ftmean <- features$V2 %in% findm
count(ftmean)
sum(ftmean)
ftmean
ftmean <- grep("mean", features$V2)
ftmean
testd <- read.table("X_test.txt")
subject_test <- read.table("subject_test.txt")
colnames(subject_test) <- c("subjectid")
testd <- cbind(testd, subject_test)
activity_test <- read.table("y_test.txt")
colnames(activity_test) <- c("activityid")
testd <- cbind(testd, activity_test)
traind <- read.table("X_train.txt")
subject_train <- read.table("subject_train.txt")
colnames(subject_train) <- c("subjectid")
traind <- cbind(traind, subject_train)
activity_train <- read.table("y_train.txt")
colnames(activity_train) <- c("activityid")
traind <- cbind(traind, activity_train)
mergedset <- rbind(traind, testd)
setwd("C:/snehal/Coursera/Data Science/getting and cleaning data/course project/UCI HAR Dataset/train")
traind <- read.table("X_train.txt")
subject_train <- read.table("subject_train.txt")
colnames(subject_train) <- c("subjectid")
traind <- cbind(traind, subject_train)
activity_train <- read.table("y_train.txt")
colnames(activity_train) <- c("activityid")
traind <- cbind(traind, activity_train)
setwd("C:/snehal/Coursera/Data Science/getting and cleaning data/course project/UCI HAR Dataset/test")
testd <- read.table("X_test.txt")
subject_test <- read.table("subject_test.txt")
colnames(subject_test) <- c("subjectid")
testd <- cbind(testd, subject_test)
activity_test <- read.table("y_test.txt")
colnames(activity_test) <- c("activityid")
testd <- cbind(testd, activity_test)
mergedset <- rbind(traind, testd)
View(mergedset)
ftmean <- grep(findm, features$V2)
ftmean <- grep("mean|std", features$V2)
ftmean <- grep("mean|std", features$V2)
meanset <- mergedset[,ftmean]
class(ftmean)
ftmean[80] <- 562
ftmean[80:81] <- 562:563
ftmean[80]
ftmean[81]
ftmean[79]
meanset <- mergedset[,ftmean]
meanset_colnames <- features[ftmean, V2]
meanset_colnames <- features[ftmean, 'V2']
class(meanset_colnames)
nrows(meanset_colnames)
nrow(meanset_colnames)
meanset_colnames <- as.character(features[ftmean, 'V2'])
meanset_colnames[80]
meanset_colnames[80] <- "subjectid"
meanset_colnames[80] <- "activityid"
meanset_colnames[80] <- "subjectid"
meanset_colnames[81] <- "subjectid"
meanset$activityid <- as.factor(meanset$activityid)
levels9meanset$activityid
levels(meanset$activityid)
setwd("C:/snehal/Coursera/Data Science/getting and cleaning data/course project/UCI HAR Dataset")
dir()
act_labels <- read.table("activity_labels.txt")
act_labels
levels(meanset$activityid) <- act_labels$V2
levels(meanset$activityid)
View(meanset)
colnames(meanset) <- meanset_colnames
View(meanset)
library(data.table)
meanset_colnames <- features[ftmean, 'V2']
meanset_colnames <- as.character(features[ftmean, 'V2'])
meanset_colnames[80] <- "subjectid"
meanset_colnames[81] <- "activityid"
colnames(meanset) <- meanset_colnames
View(meanset)
tidyset <- meanset[,colMeans(meanset), by='subjectid','activityid']
tidyset <- meanset[,colMeans(meanset), by=subjectid,activityid]
tidyset <- meanset[,colMeans(meanset), by=meanset$subjectid,eanset$activityid]
tidyset <- meanset[,colMeans(meanset), by='subjectid']
tidyset <- meanset[,colMeans(meanset), by=subjectid]
meanset <- data.table(meanset)
tidyset <- meanset[,colMeans(meanset), by=subjectid,activityid]
tidyset <- meanset[,colMeans(meanset), by=list(subjectid,activityid)]
tidyset <- meanset[,sapply(meanset,mean), by=list(subjectid,activityid)]
tidyset <- meanset[,lapply(meanset,mean), by=list(subjectid,activityid)]
class(meanset[1:3])
sapply(meanset, class)
sapply(meanset[1:3], class)
tidyset <- meanset[,sapply(meanset,mean), by=list(subjectid,activityid)]
warnings()
tidyset <- meanset[,mean(meanset), by=list(subjectid,activityid)]
warnings()
sapply(meanset, mean)
tidyset <- meanset[,suppressWarnings(mean(meanset)), by=list(subjectid,activityid)]
View(tidyset)
mean(meanset[fBodyBodyGyroJerkMag-meanFreq()])
mean(meanset[fBodyBodyGyroJerkMag-meanFreq])
mean(meanset['fBodyBodyGyroJerkMag-meanFreq'])
setkey(meanset,subjectid)
mean(meanset['fBodyBodyGyroJerkMag-meanFreq'])
mean(meanset['fBodyBodyGyroJerkMag-meanFreq()'])
mean(meanset[,fBodyBodyGyroJerkMag-meanFreq()])
tidyset <- meanset[,suppressWarnings(mean(meanset)), by=list(subjectid,activityid)]
mean(meanset)
sapply(meanset, mean)
tapply(meanset, mean)
tidyset <- meanset[,suppressWarnings(sapply(meanset, mean)), by=list(subjectid,activityid)]
tidyset <- meanset[,suppressWarnings(colMeans(meanset)), by=list(subjectid,activityid)]
tidyset <- meanset[,lapply(.SD, mean), by=list(subjectid,activityid)]
View(tidyset)
